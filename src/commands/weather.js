const { getWeather, getWeatherByCoords } = require('../services/weather');

async function weatherCommand(ctx) {
  // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–∑–≤–∞–Ω–∞ –Ω–µ –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
  if (ctx.chat.type !== 'private') {
    return; // –ü—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º –±–µ–∑ –æ—Ç–≤–µ—Ç–∞
  }

  // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã (–≥–æ—Ä–æ–¥)
  if (ctx.message.text.split(' ')[1]) {
    const city = ctx.message.text.split(' ')[1];
    const weatherInfo = await getWeather(city);
    return ctx.reply(weatherInfo, {
      reply_markup: {
        inline_keyboard: [
          [{ text: "üìç –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –ø–æ –º–æ–µ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏", callback_data: "get_weather_by_location" }]
        ]
      }
    });
  }

  // –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω
  ctx.reply('–í—ã –º–æ–∂–µ—Ç–µ:', {
    reply_markup: {
      keyboard: [
        [{ text: "üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location: true }],
        ["/weather –°–∏–º—Ñ–µ—Ä–æ–ø–æ–ª—å", "/weather –Ø–ª—Ç–∞", "/weather –ê–ª—É—à—Ç–∞", "/weather –°—É–¥–∞–∫", "/weather –ï–≤–ø–∞—Ç–æ—Ä–∏—è"]
      ],
      resize_keyboard: true,
      one_time_keyboard: true
    }
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
async function handleLocation(ctx) {
  // –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–∞—Ö
  if (ctx.chat.type !== 'private') return;

  const { latitude, longitude } = ctx.message.location;
  const weatherInfo = await getWeatherByCoords(latitude, longitude);
  ctx.reply(weatherInfo);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–∫–∏
async function handleLocationButton(ctx) {
  // –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–∞—Ö
  if (ctx.chat.type !== 'private') {
    await ctx.answerCbQuery('–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º', { show_alert: true });
    return;
  }

  await ctx.answerCbQuery();
  await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é:', {
    reply_markup: {
      keyboard: [
        [{ text: "üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location: true }]
      ],
      resize_keyboard: true,
      one_time_keyboard: true
    }
  });
}

module.exports = { 
  weatherCommand, 
  handleLocation,
  handleLocationButton
};