const User = require('../models/User');

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function addUserCommand(ctx) {
    try {
        const args = ctx.message.text.split(' ');
        if (args.length !== 2) {
            return ctx.reply('‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /addUser <telegram_id>');
        }

        const telegramId = args[1];
        const user = await User.findOneAndUpdate(
            { telegramId },
            { isAuthorized: true },
            { new: true, upsert: true }
        );

        await ctx.reply(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.username || telegramId} –¥–æ–±–∞–≤–ª–µ–Ω`);

        try {
            await ctx.telegram.sendMessage(
                telegramId,
                `üëã –ü—Ä–∏–≤–µ—Ç! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É.\n\n` +
                `–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n` +
                `/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n` +
                `/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n` +
                `/weather - –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É\n` +
                `/hotDrinks - –ì–æ—Ä—è—á–∏–µ –Ω–∞–ø–∏—Ç–∫–∏\n` +
                `/coldDrinks - –•–æ–ª–æ–¥–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏\n` +
                `/showcase - –í–∏—Ç—Ä–∏–Ω–∞\n` +
                `/work - –†–∞–±–æ—á–∏–π –≥—Ä–∞—Ñ–∏–∫\n` +
                `/weekly - –ù–µ–¥–µ–ª—å–Ω–∞—è –∑–∞—è–≤–∫–∞\n` +
                `/keywords - –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞\n` +
                `/noorgoodday - –ú–æ—Ç–∏–≤–∞—Ü–∏—è\n` +
                `/bubble - –ë–∞–±–ª-—Ç–∏\n\n` +
                `–¢–∞–∫–∂–µ –±–æ—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: —á–∏—Ç–∞—Ç—å, –∞–º—Ö–∞—Ä–∞, –ø–æ–º–æ–ª, –≥—Ä–∏–Ω–¥–µ—Ä, –º–µ–Ω–µ–¥–∂–µ—Ä`
            );
        } catch (error) {
            await ctx.reply('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–º—É –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –Ω–µ –Ω–∞—á–∞–ª –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º.');
        }
    } catch (error) {
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
}

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function removeUserCommand(ctx) {
    try {
        const args = ctx.message.text.split(' ');
        if (args.length !== 2) {
            return ctx.reply('‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /removeUser <telegram_id>');
        }

        const telegramId = args[1];
        const user = await User.findOneAndUpdate(
            { telegramId },
            { isAuthorized: false },
            { new: true }
        );

        if (!user) {
            return ctx.reply('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }

        await ctx.reply(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.username || telegramId} —É–¥–∞–ª–µ–Ω`);
    } catch (error) {
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
}

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function listUsersCommand(ctx) {
    try {
        const users = await User.find({ isAuthorized: true });
        if (users.length === 0) {
            return ctx.reply('üìù –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç');
        }

        const userList = users.map(user => 
            `ID: ${user.telegramId}\nUsername: ${user.username || '–ù–µ—Ç'}\nAdmin: ${user.isAdmin ? '–î–∞' : '–ù–µ—Ç'}`
        ).join('\n\n');

        await ctx.reply(`üìù –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n${userList}`);
    } catch (error) {
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    }
}

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞
async function setAdminCommand(ctx) {
    try {
        const args = ctx.message.text.split(' ');
        if (args.length !== 2) {
            return ctx.reply('‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /setAdmin <telegram_id>');
        }

        const telegramId = args[1];
        const user = await User.findOneAndUpdate(
            { telegramId },
            { isAdmin: true },
            { new: true, upsert: true }
        );

        await ctx.reply(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.username || telegramId} –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º`);
    } catch (error) {
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
    }
}

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
async function checkDbCommand(ctx) {
    try {
        const userId = ctx.from.id.toString();
        const user = await User.findOne({ telegramId: userId });
        
        const message = `
üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:

–í–∞—à ID: ${userId}
–ù–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ: ${user ? '–î–∞' : '–ù–µ—Ç'}
${user ? `
–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
- Username: ${user.username || '–ù–µ—Ç'}
- –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: ${user.isAuthorized ? '–î–∞' : '–ù–µ—Ç'}
- –ê–¥–º–∏–Ω: ${user.isAdmin ? '–î–∞' : '–ù–µ—Ç'}
- –î–æ–±–∞–≤–ª–µ–Ω: ${user.addedAt.toLocaleString()}
` : ''}
`;
        
        await ctx.reply(message);
    } catch (error) {
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    }
}

module.exports = {
    addUserCommand,
    removeUserCommand,
    listUsersCommand,
    setAdminCommand,
    checkDbCommand
}; 