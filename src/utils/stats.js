const fs = require('fs');
const path = require('path');

const STATS_FILE = path.join(__dirname, '../data/stats.json');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function initStatsFile() {
  if (!fs.existsSync(STATS_FILE)) {
    fs.mkdirSync(path.dirname(STATS_FILE), { recursive: true });
    fs.writeFileSync(STATS_FILE, JSON.stringify({}));
  }
}

function saveReaction(type, reaction) {
  initStatsFile();
  const stats = JSON.parse(fs.readFileSync(STATS_FILE));
  
  stats[type] = stats[type] || {};
  stats[type][reaction] = (stats[type][reaction] || 0) + 1;
  
  fs.writeFileSync(STATS_FILE, JSON.stringify(stats, null, 2));
}

function getStats() {
  initStatsFile();
  return JSON.parse(fs.readFileSync(STATS_FILE));
}

function getWeeklyReport() {
  const stats = getStats();
  const types = {
    motivational: "–ú–æ—Ç–∏–≤–∞—Ü–∏—è",
    facts: "–§–∞–∫—Ç—ã",
    jokes: "–®—É—Ç–∫–∏", 
    thanks: "–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏",
    coffeeTips: "–°–æ–≤–µ—Ç—ã"
  };

  let report = "üìä <b>–ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º</b>:\n\n";
  
  for (const [type, name] of Object.entries(types)) {
    if (stats[type]) {
      report += `‚òï <b>${name}</b>:\n` +
               `   ‚ù§Ô∏è: ${stats[type].love || 0}\n` +
               `   üëç: ${stats[type].ok || 0}\n` +
               `   ü§∑: ${stats[type].meh || 0}\n\n`;
    }
  }

  const total = Object.values(stats).reduce(
    (sum, type) => sum + Object.values(type).reduce((s, v) => s + v, 0), 0);

  return report + 
         `üìà <b>–í—Å–µ–≥–æ —Ä–µ–∞–∫—Ü–∏–π –∑–∞ –Ω–µ–¥–µ–ª—é:</b> ${total}\n\n` +
         `–°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —Ä–∞–∑–¥–µ–ª: ${getMostPopularCategory(stats)}`;
}

function getMostPopularCategory(stats) {
  const [popular] = Object.entries(stats)
    .map(([type, data]) => ({
      type,
      total: Object.values(data).reduce((a, b) => a + b, 0)
    }))
    .sort((a, b) => b.total - a.total)
    .map(item => item.type);

  return popular || "–µ—â—ë –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö";
}

module.exports = { 
  saveReaction, 
  getStats, 
  getWeeklyReport 
};