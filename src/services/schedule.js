const cron = require('node-cron');
const messages = require('../utils/messages');
const employees = require('../utils/employees');
const { saveReaction, getWeeklyReport } = require('../utils/stats');

class MessageScheduler {
  constructor(bot) {
    this.bot = bot;
    this.chatId = '-1001629025233';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
  getRandomEmployee() {
    return employees[Math.floor(Math.random() * employees.length)];
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  getRandomMessage(type) {
    const category = messages[type] || messages.motivational;
    return category[Math.floor(Math.random() * category.length)];
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  async sendInteractiveMessage(type) {
    const employee = this.getRandomEmployee();
    const message = this.getRandomMessage(type);
    
    try {
      await this.bot.telegram.sendMessage(
        this.chatId,
        `${employee.emoji} <b>${employee.name}</b>, ${message.text} ${message.emoji}`,
        {
          parse_mode: 'HTML',
          reply_markup: {
            inline_keyboard: [
              [
                { text: "‚ù§Ô∏è", callback_data: `rate_${type}_love` },
                { text: "üëç", callback_data: `rate_${type}_ok` },
                { text: "ü§∑", callback_data: `rate_${type}_meh` }
              ],
              [
                { text: "üìö –§–∞–∫—Ç", callback_data: 'more_facts' },
                { text: "üòÇ –®—É—Ç–∫–∞", callback_data: 'more_jokes' },
                { text: "üí° –°–æ–≤–µ—Ç", callback_data: 'more_tips' }
              ]
            ]
          }
        }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  setupMotivationalMessages() {
    // –£—Ç—Ä–µ–Ω–Ω—è—è –º–æ—Ç–∏–≤–∞—Ü–∏—è
    cron.schedule('30 8 * * *', () => this.sendInteractiveMessage('motivational'), {
      timezone: 'Europe/Moscow'
    });

    // –û–±–µ–¥–µ–Ω–Ω—ã–π —Ñ–∞–∫—Ç
    cron.schedule('0 12 * * *', () => this.sendInteractiveMessage('facts'), {
      timezone: 'Europe/Moscow'
    });

    // –í–µ—á–µ—Ä–Ω—è—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
    cron.schedule('30 20 * * *', () => this.sendInteractiveMessage('thanks'), {
      timezone: 'Europe/Moscow'
    });

    // –°–ª—É—á–∞–π–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞ —Å 10 –¥–æ 20)
    cron.schedule('0 10-20/2 * * *', () => {
      const types = ['motivational', 'facts', 'jokes', 'thanks', 'coffeeTips'];
      this.sendInteractiveMessage(types[Math.floor(Math.random() * types.length)]);
    }, { timezone: 'Europe/Moscow' });

    // –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    cron.schedule('0 9 * * 1', () => {
      this.bot.telegram.sendMessage(
        this.chatId,
        getWeeklyReport(),
        { parse_mode: 'HTML' }
      );
    }, { timezone: 'Europe/Moscow' });
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
  setupWorkReminders() {
    const reminders = [
      { time: '30 7 * * *', text: '<b>–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!üåÖüåÖüåÖ –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–≥–æ—Ç–æ–≤–∫–∏ –ø–æ –±–∞—Ä—É, –∞ —Ç–∞–∫–∂–µ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–æ–ø-–ª–∏—Å—Ç!</b>' },
      { time: '30 7 * * *', text: '<b>–û—Ç–ø–∏—à–∏—Ç–µ—Å—å –≤ —á–∞—Ç ¬´–ú–ï–ù–ï–î–ñ–ï–†–´ MERRY BERRY¬ª —á—Ç–æ –≤—ã –≥–æ—Ç–æ–≤–∏—Ç–µ—Å—å –∫ —Ä–∞–±–æ—Ç–µ.</b>' },
      { time: '58 7 * * *', text: '<b>–í —á–∞—Ç ¬´–ì—Ä–∞—Ñ–∏–∫–∏¬ª –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –≤–∞—à –≥—Ä–∞—Ñ–∏–∫ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.</b>' },
      { time: '01 8 * * *', text: '<b>–í —á–∞—Ç ¬´–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã¬ª –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Ñ–æ—Ç–æ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ —Å–º–µ–Ω–µ, –≤–º–µ—Å—Ç–µ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º. (–∞–∫–∫—É—Ä–∞—Ç–Ω—ã–π, –æ–ø—Ä—è—Ç–Ω—ã–π –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥. –ß–∏—Å—Ç—ã–π —Ñ–∞—Ä—Ç—É–∫, —Ñ—É—Ç–±–æ–ª–∫–∞, –±–µ–π–¥–∂ –∏ –∑–Ω–∞—á–æ–∫ –≤—Å–µ–≥–¥–∞ –Ω–∞ –≤–∞—Å. –ï—Å–ª–∏ –ø–æ—Ç–µ—Ä—è–ª–∏ –∏–ª–∏ –∑–∞–±—ã–ª–∏, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤—ã–π. –°–æ–±—Ä–∞–Ω–Ω—ã–µ –≤–æ–ª–æ—Å—ã —É –¥–µ–≤–æ—á–µ–∫.)</b>' },
      { time: '00 8 * * *', text: '<b>–í —á–∞—Ç ¬´–ú–ï–ù–ï–î–ñ–ï–†–´ MERRY BERRY" —Ñ–æ—Ç–æ –∫—Ä–∞—Å–∏–≤–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –≤–∏—Ç—Ä–∏–Ω—ã, —Ñ–æ—Ç–æ —Å—Ç–∞–Ω—Ü–∏–∏ —Å–∞–º–æ–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏ –ø–µ—á–µ–Ω—å—è.</b>' },
      { time: '02 8 * * *', text: '<b>–í–∫–ª—é—á–∞–µ–º –º—É–∑—ã–∫—É. –ü–æ–¥—Å–≤–µ—Ç–∫—É –≤–∫–ª—é—á–∏—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Ä–Ω—ã (–∫–∞–∂–¥—É—é), –ø–æ–º—ã—Ç—å. –í—Å–µ —Å—Ç–µ–∫–ª—è–Ω–Ω—ã–µ –¥–≤–µ—Ä–∏ –ø–æ–º—ã—Ç—å. –í—Å—ë –æ—Å–≤–µ—â–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å: –≤—ã–≤–µ—Å–∫–∞, –≥–∏—Ä–ª—è–Ω–¥—ã, —Å–≤–µ—Ç –Ω–∞ –±–∞—Ä–µ –∏ –≤ –∑–∞–ª–µ. –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä —Å—Ç–∞–≤–∏–º –Ω–∞ 24 –≥—Ä–∞–¥—É—Å–∞ –≤—Å–µ–≥–¥–∞.</b>' },
      { time: '03 8 * * *', text: '<b>–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–æ–ø-–ª–∏—Å—Ç –∏ —Ö–æ—Ç-–ª–∏—Å—Ç</b>' },
      { time: '00 10 * * *', text: '<b>‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è–ù–µ –∑–∞–±—ã–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø–æ–º–æ–ª! –§–æ—Ç–æ –≤ —Ç–µ–º—É "–ü–û–ú–û–õ"‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è</b>' },
      { time: '00 12 * * *', text: '<b>–í —á–∞—Ç ¬´–ú–ï–ù–ï–î–ñ–ï–†–´ MERRY BERRY¬ª —Ñ–æ—Ç–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –≤–∏—Ç—Ä–∏–Ω—ã –ø–æ—Å–ª–µ –∑–∞—è–≤–∫–∏.</b>' },
      { time: '00 13 * * *', text: '<b>–û—Å–º–æ—Ç—Ä–∏—Ç–µ –∑–∞–ª –∏ –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤–∏—Ç—Ä–∏–Ω—Éüç∞</b>' },
      { time: '00 13 * * *', text: '<b>–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –Ω–∞—à–∏ –Ω–æ–≤–∏–Ω–∫–∏ –≤ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –≥–æ—Å—Ç—è–º</b>' },
      { time: '00 14 * * *', text: '<b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–ª. –ü–æ–ª—ã, —Å—Ç–æ–ª—ã, —Å—Ç—É–ª—å—è. –í—Å–µ –ø–æ–ø—Ä–∞–≤—å—Ç–µ, –ø—Ä–æ—Ç—Ä–∏—Ç–µ –¥–≤–µ—Ä–∏. –°–∫–ª–∞–¥ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –≤ —á–∏—Å—Ç–æ—Ç–µ.</b>' },
      { time: '00 16 * * *', text: '<b>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤–∏—Ç—Ä–∏–Ω—Éüç∞üç∞</b>' },
      { time: '00 20 * * *', text: '<b>–ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —Ñ—Ä—É–∫—Ç—ã. (–∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –∫—Ä–æ–º–µ —Å—É–±–±–æ—Ç—ã)</b>' },
      { time: '00 21 * * *', text: '<b>–§–æ—Ç–æ –≤–∞—à–µ–π –≤–∏—Ç—Ä–∏–Ω—ã –≤–µ—á–µ—Ä–æ–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.</b>' },
      { time: '00 23 * * *', text: '<b>–§–æ—Ç–æ —É–±—Ä–∞–Ω–Ω–æ–π, —á–∏—Å—Ç–æ–π –≤–∏—Ç—Ä–∏–Ω—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç, —á—Ç–æ–±—ã –≤—Å–µ –≤–∏–¥–µ–ª–∏ —á—Ç–æ –≤—ã –∑–∞–∫—Ä—ã–ª–∏—Å—å.</b>' },
      { time: '30 21 * * *', text: '<b>–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –∑–∞—è–≤–∫—É.</b>' },
      { time: '00 18 * * 4', text: '<b>–°–µ–≥–æ–¥–Ω—è –Ω—É–∂–Ω–æ –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å–º–µ–Ω—ã –∑–∞–º–æ—á–∏—Ç—å –≤—Å—é –ø–æ—Å—É–¥—É –Ω–∞ –Ω–æ—á—å –≤ —Ä–∞—Å—Ç–≤–æ—Ä–µ –∏–∑ –±–µ–ª–∏–∑–Ω—ã, –º–æ—é—â–µ–≥–æ –∏ –≤–æ–¥—ã.</b>' },
      { time: '00 8 * * 6', text: '<b>–°–µ–≥–æ–¥–Ω—è –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞ —É –ü1 –∏ –ü2, –°–û–ö–û–õ–û–í–ê –ò –¶–ï–ù–¢–†–ê üßπ</b>' },
      { time: '00 7 * * 0', text: '<b>–°–µ–≥–æ–¥–Ω—è –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞ —É –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–∞—Ñ–µ –∫—Ä–æ–º–µ –ú–ï–ì–ê–ù–û–ú–ê, –ü–†–ò–ú–û–†–°–ö–û–ì–û –∏ –ü–†–ò–ú–´ (—É –≤–∞—Å –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫)üßπ</b>' },
      { time: '00 8 * * *', text: '<b>–¶–ï–ù–¢–† –∏ –ê–õ–£–®–¢–ê! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –º–∞—Ä–∫–∏–∑—ã</b>' },
      { time: '01 8 * * *', text: '<b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –±–∞—Ä–∞</b>' },
      { time: '00 14 * * *', text: '<b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–º–æ–ª, —Ñ–æ—Ç–æ–æ—Ç—á–µ—Ç –≤ –Ω–∞—à–µ–º —á–∞—Ç–µ. –£–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è –ø–æ–º–æ–ª–∞ –∏ —Å–∫–æ–ª—å–∫–æ —ç—Å–ø—Ä–µ—Å—Å–æ –±—ã–ª–æ —Å–ø–∏—Å–∞–Ω–æ</b>' },
      { time: '45 18 * * *', text: '<b>–ß–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç –Ω—É–∂–Ω–æ —Å–Ω—è—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ –ø–æ –≤–∏—Ç—Ä–∏–Ω–µüç∞</b>' },
      { time: '30 13 * * *', text: '<b>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–ª, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞</b>' },
      { time: '30 17 * * *', text: '<b>–ú–µ–Ω–µ–¥–∂–µ—Ä—ã –æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–≤–æ–∏ –≤–ª–∞–¥–µ–Ω–∏—èüè∞ –∏ –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤–∏—Ç—Ä–∏–Ω—Éüç∞üç∞üç∞</b>' },
      { time: '30 22 * * *', text: '<b>–°—Ç–∏–º–µ—Ä—ã –∑–∞–º–∞—á–∏–≤–∞–µ–º 2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é</b>' },
      { time: '10 23 * * *', text: '<b>üåÉ–í—Å–µ–º –±–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ! –í—ã –º–æ–ª–æ–¥—Ü—ã!‚ù§Ô∏è</b>' },
      { time: '11 23 * * *', text: '<b>–î–æ –∑–∞–≤—Ç—Ä–∞!</b>' },
      { time: '30 9 * * 6', text: '<b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–¥–µ–ª—å–Ω—É—é –∑–∞—è–≤–∫—É. –ò —Å–Ω—è—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ –ø–æ —Ö–∏–º–∏–∏!</b>' }
    ];

    reminders.forEach(reminder => {
      cron.schedule(reminder.time, async () => {
        try {
          await this.bot.telegram.sendMessage(this.chatId, reminder.text, { parse_mode: 'HTML' });
        console.log('–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', reminder.text.substring(0, 30) + '...');
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ä–µ–∞–∫—Ü–∏—é –ø–æ—Å–ª–µ –≤–∞–∂–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
          if(reminder.time.includes('8:00') || reminder.time.includes('20:00')) {
            setTimeout(() => {
              this.sendInteractiveMessage(['motivational', 'thanks'][Math.floor(Math.random() * 2)]);
            }, 60000 * 5); // –ß–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:', error);
        }
      }, { timezone: 'Europe/Moscow' });
    });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π
  init() {
    this.setupWorkReminders();
    this.setupMotivationalMessages();
    console.log('–í—Å–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!');
  }
}

module.exports = MessageScheduler;